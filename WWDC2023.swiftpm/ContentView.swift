import SwiftUI

struct ContentView: View {
    
    func loopByLossFunc() {
        for lossFuncGroup in accuracies {
            for learningRateGroup in lossFuncGroup {
                print(learningRateGroup)
                break
            }
            break
        }
    }
    
    
    var accuracies = [[[0.8205, 0.8659, 0.884, 0.893, 0.899, 0.9037, 0.9072, 0.9096, 0.9121, 0.915, 0.9173, 0.9194, 0.9208, 0.9229, 0.9249, 0.9259, 0.9275, 0.9285, 0.9301, 0.9317], [0.9405, 0.9477, 0.953, 0.9537, 0.9595, 0.9603, 0.9635, 0.9667, 0.9678, 0.9702, 0.9709, 0.9707, 0.9736, 0.9742, 0.9749, 0.9762, 0.9774, 0.9779, 0.9786, 0.9774], [0.9666, 0.9696, 0.9748, 0.9688, 0.9789, 0.9775, 0.9812, 0.9822, 0.9844, 0.9814, 0.9808, 0.986, 0.9859, 0.9839, 0.9826, 0.9878, 0.9898, 0.9876, 0.9881, 0.9857], [0.9419, 0.9547, 0.9652, 0.9684, 0.9705, 0.9716, 0.9709, 0.964, 0.9746, 0.9708, 0.9674, 0.9639, 0.9724, 0.973, 0.9687, 0.9717, 0.9785, 0.9741, 0.9784, 0.9756]], [[0.8034, 0.8662, 0.8833, 0.892, 0.8971, 0.9012, 0.9041, 0.9078, 0.9102, 0.9134, 0.9147, 0.9172, 0.919, 0.9204, 0.9217, 0.9235, 0.9247, 0.9258, 0.9271, 0.929], [0.9336, 0.9428, 0.9488, 0.953, 0.9578, 0.9594, 0.9632, 0.9659, 0.9676, 0.9693, 0.9714, 0.971, 0.9728, 0.974, 0.9723, 0.9744, 0.9761, 0.9779, 0.9788, 0.9783], [0.9454, 0.9467, 0.9488, 0.9654, 0.9621, 0.9636, 0.9701, 0.9709, 0.9706, 0.97, 0.9732, 0.9755, 0.9723, 0.9758, 0.978, 0.979, 0.9713, 0.9782, 0.9709, 0.9774], [0.9637, 0.9654, 0.959, 0.9599, 0.9697, 0.9653, 0.9703, 0.9706, 0.9721, 0.9722, 0.9677, 0.9727, 0.9744, 0.9754, 0.9806, 0.9758, 0.9743, 0.977, 0.9807, 0.9799]], [[0.7978, 0.8555, 0.8806, 0.89, 0.8969, 0.9017, 0.9062, 0.9085, 0.9115, 0.9148, 0.9168, 0.9188, 0.9202, 0.9224, 0.9239, 0.9251, 0.9267, 0.9278, 0.9292, 0.9301], [0.9386, 0.9451, 0.9498, 0.9532, 0.957, 0.9603, 0.9633, 0.964, 0.967, 0.9671, 0.9685, 0.97, 0.9716, 0.9719, 0.9729, 0.9735, 0.9741, 0.975, 0.9756, 0.976], [0.9709, 0.9611, 0.9758, 0.9775, 0.9786, 0.979, 0.981, 0.982, 0.9827, 0.9821, 0.9842, 0.9853, 0.9867, 0.9881, 0.9871, 0.9893, 0.9905, 0.9874, 0.9898, 0.9906], [0.9732, 0.9783, 0.9788, 0.9834, 0.9839, 0.986, 0.9833, 0.985, 0.9865, 0.9884, 0.9874, 0.9879, 0.9915, 0.9902, 0.9908, 0.9863, 0.9921, 0.9894, 0.9915, 0.9939]], [[0.5461, 0.62, 0.6758, 0.7225, 0.768, 0.7904, 0.8076, 0.8226, 0.8333, 0.8443, 0.8525, 0.8594, 0.8649, 0.87, 0.8744, 0.8778, 0.8806, 0.8834, 0.8862, 0.8883], [0.9024, 0.9112, 0.9166, 0.9221, 0.9261, 0.9294, 0.9319, 0.9354, 0.938, 0.9401, 0.9418, 0.944, 0.9452, 0.9475, 0.949, 0.95, 0.951, 0.952, 0.9532, 0.9538], [0.9582, 0.9614, 0.9634, 0.9663, 0.9685, 0.9698, 0.9703, 0.9728, 0.9743, 0.9756, 0.9756, 0.9764, 0.9772, 0.9785, 0.9789, 0.98, 0.9798, 0.9813, 0.9821, 0.9828], [0.9805, 0.9805, 0.9832, 0.9826, 0.9855, 0.9856, 0.982, 0.986, 0.9863, 0.9878, 0.9885, 0.9854, 0.9896, 0.9897, 0.9896, 0.9915, 0.9905, 0.9912, 0.9921, 0.9928]], [[0.8158, 0.8684, 0.8842, 0.8926, 0.8978, 0.9014, 0.9035, 0.9071, 0.909, 0.9101, 0.9116, 0.9136, 0.9151, 0.9162, 0.9176, 0.9184, 0.9199, 0.9209, 0.9218, 0.9222], [0.9299, 0.9388, 0.9452, 0.9518, 0.9554, 0.9582, 0.9614, 0.9645, 0.9663, 0.9677, 0.9692, 0.9704, 0.972, 0.9731, 0.9743, 0.973, 0.975, 0.9766, 0.9776, 0.9776], [0.9695, 0.9716, 0.9729, 0.9776, 0.9778, 0.977, 0.983, 0.9844, 0.9815, 0.9829, 0.9845, 0.9871, 0.9844, 0.9881, 0.9859, 0.988, 0.9897, 0.9894, 0.9917, 0.9892], [0.9766, 0.9798, 0.9706, 0.9829, 0.9779, 0.9837, 0.9852, 0.9886, 0.9832, 0.9832, 0.9872, 0.9862, 0.9891, 0.9843, 0.9854, 0.9878, 0.9838, 0.9842, 0.9888, 0.9896]], [[0.7468, 0.8483, 0.8732, 0.8863, 0.8931, 0.8975, 0.9003, 0.9047, 0.9073, 0.9082, 0.9101, 0.9116, 0.913, 0.914, 0.915, 0.9161, 0.917, 0.918, 0.9181, 0.9186], [0.9193, 0.9308, 0.9319, 0.9422, 0.947, 0.9502, 0.9538, 0.9567, 0.9609, 0.9618, 0.964, 0.9663, 0.9679, 0.9697, 0.9696, 0.971, 0.9724, 0.9726, 0.9742, 0.9738], [0.9697, 0.9724, 0.9752, 0.9766, 0.9749, 0.9782, 0.978, 0.9786, 0.9829, 0.9809, 0.982, 0.9832, 0.9858, 0.986, 0.9874, 0.9818, 0.9886, 0.9854, 0.9855, 0.9875], [0.9684, 0.9713, 0.9828, 0.9783, 0.9837, 0.9805, 0.9736, 0.9865, 0.988, 0.9864, 0.986, 0.987, 0.9876, 0.9863, 0.9868, 0.9896, 0.9857, 0.9827, 0.9913, 0.984]]]

    var epochs = [1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20]
    var learningRates = [0.01,0.1,0.5,1]
    var lossFunctions = ["ReLU", "Leaky ReLU", "Tanh", "Sigmoid", "ELU", "Softplus"]
    
    @State var epochsSelection = 10
    @State var learningRateSelection = 0.1
    @State var lossFunctionSelection = "relu"
    
   

    var body: some View {
        
        VStack {
            //Title
            Text("Your Neural Network")
                .font(.system(size: 84, weight: .semibold))
                .multilineTextAlignment(.center)
                .padding(10)
            
            Button {
                loopByLossFunc()
            } label: {
                Text("click me")
            }

            
            //Neural Network
            Rectangle()
                .padding([.leading, .trailing], 50)
                .padding([.top, .bottom], 20)
//                .frame(minHeight: UIScreen.main.bounds.height*0.45, maxHeight: UIScreen.main.bounds.height * 0.6)
            
            //Container for variables
            HStack {
                
                VStack {
                    HStack {
                        Text("Number of Epochs: ")
                        Picker("Epochs", selection: $epochsSelection) {
                             
                            ForEach(epochs, id: \.self) {
                                Text(String($0))
                            }
                        }
                        .pickerStyle(.menu)
                        
                    }
                    
                    HStack {
                        Text("Learning Rate: ")
                        Picker("Learning Rate", selection: $learningRateSelection) {
                             
                            ForEach(learningRates, id: \.self) {
                                Text(String($0))
                            }
                        }
                        .pickerStyle(.menu)
                        
                    }
                
                    HStack {
                        Text("Loss Function: ")
                        Picker("Loss Function", selection: $lossFunctionSelection) {
                             
                            ForEach(lossFunctions, id: \.self) {
                                Text($0)
                            }
                        }
                        .pickerStyle(.menu)
                        
                    }
                    
                    Text("Layers: 1")

                }
                
                VStack {
                    
                    Text("Training Time: 24.5 seconds")
                    Text("Prediction Time: 0.2 seconds")
                    Text("Accuracy: 95.4%")
                    Text("Model Size: 2.6 MB")

                }
   
   
            }
        }
    }
}

